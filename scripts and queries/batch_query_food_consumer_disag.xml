<?xml version="1.0" encoding="UTF-8"?>
<queries>
    <aQuery>
        <all-regions/>
        <supplyDemandQuery title = "food demand">
            <axis1 name = "input">input[@name]</axis1>
            <axis2 name = "Year">demand-physical[@vintage]</axis2>
            <xPath
                buildList = "true"
                dataName = "demand"
                group = "false"
                sumAll = "false">gcam-consumer[contains(@name, 'FoodDemand')]//*[@type='input']/demand-physical/node()</xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <all-regions/>
        <supplyDemandQuery title = "food demand prices">
            <axis1 name = "input">input[@name]</axis1>
            <axis2 name = "Year">price-paid[@vintage]</axis2>
            <xPath
                buildList = "true"
                dataName = "price"
                group = "false"
                sumAll = "false">gcam-consumer[contains(@name, 'FoodDemand')]//*[@type='input']/price-paid/node()</xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <all-regions/>
        <supplyDemandQuery title = "food demand per capita">
            <axis1 name = "input">input[@name]</axis1>
            <axis2 name = "Year">demand-percap[@year]</axis2>
            <xPath
                buildList = "true"
                dataName = "demand per cap"
                group = "false"
                sumAll = "false">gcam-consumer[contains(@name,'FoodDemand')]//*[@type='input']/demand-percap/node()</xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <all-regions/>
        <supplyDemandQuery title = "food demand regional bias">
            <axis1 name = "input">input[@name]</axis1>
            <axis2 name = "Year">regional-bias[@year]</axis2>
            <xPath
                buildList = "true"
                dataName = "regional-bias"
                group = "false"
                sumAll = "false">gcam-consumer[contains(@name,'FoodDemand')]//*[@type='input']/regional-bias/node()</xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <all-regions/>
        <gdpQueryBuilder title="GDP per capita PPP by region">
            <axis1 name="region">region</axis1>
            <axis2 name="Year">nationalAccount[@year]</axis2>
            <xPath buildList="true" dataName="gdp-per-capita-ppp" group="false" sumAll="false">nationalAccount/account[@name = 'gdp-per-capita-ppp']/node()</xPath>
            <comments/>
        </gdpQueryBuilder>
    </aQuery>
    <aQuery>
        <all-regions/>
        <demographicsQuery title = "population by region">
            <axis1 name = "region">region</axis1>
            <axis2 name = "Year">populationMiniCAM</axis2>
            <xPath
                buildList = "true"
                dataName = "total-population"
                group = "false"
                sumAll = "false">demographics/populationMiniCAM/total-population/node()</xPath>
            <comments/>
        </demographicsQuery>
    </aQuery>
    <aQuery>
        <all-regions/>
        <supplyDemandQuery title = "food consumption by type (specific)">
            <axis1 name = "technology">technology</axis1>
            <axis2 name = "Year">physical-output[@vintage]</axis2>
            <xPath
                buildList = "true"
                dataName = "output"
                group = "false"
                sumAll = "false">
                *[@type='sector' (:collapse:) and (@name='FoodDemand_Staples' or @name='FoodDemand_NonStaples')]//
                *[@type='subsector']//*[@type='technology']/
                *[@type='output' (:collapse:)]/physical-output/node()
            </xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <all-regions/>
        <query title = "aggregated land allocation">
            <axis1 name = "LandLeaf">LandLeaf[@crop]</axis1>
            <axis2 name = "Year">land-allocation[@year]</axis2>
            <xPath
                buildList = "true"
                dataName = "LandLeaf"
                group = "false"
                sumAll = "false">/LandNode[@name='root' or @type='LandNode' (:collapse:)]//land-allocation/text()</xPath>
            <comments/>
            <labelRewriteList append-values = "false">
                <level name = "LandLeaf">
                    <rewrite from = "Grassland" to = "grass"/>
                    <rewrite from = "ProtectedUnmanagedPasture" to = "pasture (other)"/>
                    <rewrite from = "FodderHerb" to = "crops"/>
                    <rewrite from = "FodderHerbC4" to = "crops"/>
                    <rewrite from = "MiscCrop" to = "crops"/>
                    <rewrite from = "MiscCropTree" to = "crops"/>
                    <rewrite from = "PalmFruit" to = "crops"/>
                    <rewrite from = "FiberCrop" to = "crops"/>
                    <rewrite from = "OtherGrain" to = "crops"/>
                    <rewrite from = "OtherGrainC4" to = "crops"/>
                    <rewrite from = "FodderGrass" to = "crops"/>
                    <rewrite from = "ProtectedGrassland" to = "grass"/>
                    <rewrite from = "ProtectedUnmanagedForest" to = "forest (unmanaged)"/>
                    <rewrite from = "biomassTree" to = "biomass"/>
                    <rewrite from = "OtherArableLand" to = "otherarable"/>
                    <rewrite from = "Rice" to = "crops"/>
                    <rewrite from = "UrbanLand" to = "urban"/>
                    <rewrite from = "RockIceDesert" to = "rock and desert"/>
                    <rewrite from = "RootTuber" to = "crops"/>
                    <rewrite from = "Corn" to = "crops"/>
                    <rewrite from = "CornC4" to = "crops"/>
                    <rewrite from = "Fruits" to = "crops"/>
                    <rewrite from = "FruitsTree" to = "crops"/>
                    <rewrite from = "Legumes" to = "crops"/>
                    <rewrite from = "NutsSeeds" to = "crops"/>
                    <rewrite from = "NutsSeedsTree" to = "crops"/>
                    <rewrite from = "Soybean" to = "crops"/>
                    <rewrite from = "Vegetables" to = "crops"/>
                    <rewrite from = "OilCrop" to = "crops"/>
                    <rewrite from = "OilCropTree" to = "crops"/>
                    <rewrite from = "OilPalm" to = "crops"/>
                    <rewrite from = "OilPalmTree" to = "crops"/>
                    <rewrite from = "ProtectedShrubland" to = "shrubs"/>
                    <rewrite from = "SugarCrop" to = "crops"/>
                    <rewrite from = "SugarCropC4" to = "crops"/>
                    <rewrite from = "UnmanagedForest" to = "forest (unmanaged)"/>
                    <rewrite from = "Pasture" to = "pasture (grazed)"/>
                    <rewrite from = "Forest" to = "forest (managed)"/>
                    <rewrite from = "biomassGrass" to = "biomass"/>
                    <rewrite from = "Shrubland" to = "shrubs"/>
                    <rewrite from = "UnmanagedPasture" to = "pasture (other)"/>
                    <rewrite from = "Tundra" to = "tundra"/>
                    <rewrite from = "Wheat" to = "crops"/>
                </level>
            </labelRewriteList>
        </query>
    </aQuery>
    <aQuery>
        <all-regions/>
        <supplyDemandQuery title = "demand balances by crop commodity">
            <axis1 name = "sector">sector</axis1>
            <axis2 name = "Year">demand-physical[@vintage]</axis2>
            <xPath
                buildList = "true"
                dataName = "input"
                group = "false"
                sumAll = "false">
                *[@type='sector']//*[@type='input' and
                (@name='regional corn' or @name='regional fibercrop'
                or @name='regional misccrop' or @name='regional oilcrop' or @name='regional othergrain'
                or @name='regional palmfruit' or @name='regional rice' or @name='regional root_tuber'
                or @name='regional sugarcrop' or @name='regional wheat' or @name='FodderGrass' or @name='FodderHerb'
                or @name='Forest' or @name='Pasture')]/
                demand-physical/node()
            </xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <all-regions/>
        <supplyDemandQuery title = "demand balances by meat and dairy commodity">
            <axis1 name = "sector">sector</axis1>
            <axis2 name = "Year">demand-physical[@vintage]</axis2>
            <xPath
                buildList = "true"
                dataName = "input"
                group = "false"
                sumAll = "false">
                *[@type='sector']//*[@type='input' and
                (@name='Beef' or @name='Pork' or @name='Poultry' or @name='SheepGoat' or @name='OtherMeat_Fish')]/
                demand-physical/node()
            </xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <all-regions/>
        <supplyDemandQuery title = "prices by sector">
            <axis1 name = "sector">sector</axis1>
            <axis2 name = "Year">cost</axis2>
            <xPath
                buildList = "true"
                dataName = "Price"
                group = "false"
                sumAll = "false">*[@type = 'sector']/cost/text()</xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <all-regions/>
        <emissionsQueryBuilder title = "CO2 emissions by region">
            <axis1 name = "region">region</axis1>
            <axis2 name = "Year">emissions</axis2>
            <xPath
                buildList = "true"
                dataName = "emissions"
                group = "false"
                sumAll = "false">*[@type = 'sector' (:collapse:) or @type = 'resource' (:collapse:)](: / *[@type = 'subresource' (: collapse :)] :)//*[((@name='CO2'))]/emissions/node()</xPath>
            <comments/>
        </emissionsQueryBuilder>
    </aQuery>
    <aQuery>
        <all-regions/>
<query title="LUC emissions by region">
    <axis1 name="LandLeaf">LandLeaf</axis1>
    <axis2 name="Year">land-use-change-emission[@year]</axis2>
    <xPath buildList="true" dataName="land-use-change-emission" group="false" sumAll="true">/LandNode[@name='root' or @type='LandNode' (:collapse:)]//
                land-use-change-emission[@year&gt;1970]/text()</xPath>
    <comments/>
</query>
    </aQuery>
    <aQuery>
        <demographicsQuery title = "subregional population">
            <axis1 name = "region">region</axis1>
            <axis2 name = "Year">subregional-population</axis2>
            <xPath
                buildList = "true"
                dataName = "subregional-population"
                group = "false"
                sumAll = "false">gcam-consumer[contains(@name,'FoodDemand')]/subregional-population/node()</xPath>
            <comments/>
        </demographicsQuery>
    </aQuery>
    <aQuery>
        <demographicsQuery title = "subregional income">
            <axis1 name = "region">region</axis1>
            <axis2 name = "Year">subregional-percapita-income</axis2>
            <xPath
                buildList = "true"
                dataName = "subregional-percapita-income"
                group = "false"
                sumAll = "false">gcam-consumer[contains(@name,'FoodDemand')]/subregional-percapita-income/node()</xPath>
            <comments/>
        </demographicsQuery>
    </aQuery>
    <aQuery>
        <supplyDemandQuery title = "meat and dairy prices">
            <axis1 name = "sector">sector</axis1>
            <axis2 name = "Year">cost</axis2>
            <xPath
                buildList = "true"
                dataName = "output"
                group = "false"
                sumAll = "false">
                *[@type='sector' and
                (@name='Beef' or @name='SheepGoat' or @name='Pork' or @name='Dairy' or @name='Poultry')]/
                cost/text()
            </xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <supplyDemandQuery title = "ag commodity prices">
            <axis1 name = "sector">sector</axis1>
            <axis2 name = "Year">cost</axis2>
            <xPath
                buildList = "true"
                dataName = "price"
                group = "false"
                sumAll = "false">*[@type='sector' and (local-name()='AgSupplySector')]/cost/text()</xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
      <supplyDemandQuery title="ag tech yield">
          <axis1 name="technology">technology</axis1>
          <axis2 name="Year">technology</axis2>
          <xPath buildList="true" dataName="yield" group="false" sumAll="false">*[@type='sector' and (local-name()='AgSupplySector')]/
                  *[@type='subsector']/*[@type='technology']/yield/text()</xPath>
          <comments/>
      </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <supplyDemandQuery title = "food consumption by type (general)">
            <axis1 name = "sector">sector</axis1>
            <axis2 name = "Year">physical-output[@vintage]</axis2>
            <xPath
                buildList = "true"
                dataName = "output"
                group = "false"
                sumAll = "false">
                *[@type='sector' and (@name='FoodDemand_Staples' or @name='FoodDemand_NonStaples')]//
                *[@type='output']/physical-output/node()
            </xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <supplyDemandQuery title="ag production by crop type">
            <axis1 name="sector">sector[@name]</axis1>
            <axis2 name="Year">physical-output[@vintage]</axis2>
            <xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type='sector' and (local-name()='AgSupplySector')]//
                  output-primary/physical-output/node()</xPath>
            <comments>primary output only (no residue biomass)</comments>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <supplyDemandQuery title="meat and dairy production by type">
            <axis1 name="sector">sector</axis1>
            <axis2 name="Year">physical-output[@vintage]</axis2>
            <xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type='sector' and
                      (@name='Beef' or @name='SheepGoat' or @name='Pork' or @name='Dairy' or @name='Poultry')]//
                      *[@type='output']/physical-output/node()</xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <supplyDemandQuery title = "refined liquids production by tech">
            <axis1 name = "technology">technology</axis1>
            <axis2 name = "Year">physical-output[@vintage]</axis2>
            <xPath
                buildList = "true"
                dataName = "output"
                group = "false"
                sumAll = "false">
                *[@type='sector' and contains(@name,'refining')]/*[@type='subsector']/
                *[@type='technology']/output-primary[@type='output']/physical-output/node()
            </xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <supplyDemandQuery title = "irrigation water withdrawals by crop type">
            <axis1 name = "sector">sector</axis1>
            <axis2 name = "Year">demand-physical[@vintage]</axis2>
            <xPath
                buildList = "true"
                dataName = "input"
                group = "false"
                sumAll = "false">
                *[@type='sector' and not(contains(@name, 'water_td_irr'))]//*[@type='input' (:collapse:) and contains(@name, 'water_td_irr') and ends-with(@name, '_W')]/
                demand-physical/node()
            </xPath>
            <comments/>
        </supplyDemandQuery>
    </aQuery>
    <aQuery>
      <region name="Global" />
      <supplyDemandQuery title="irrigation water withdrawals by region">
         <axis1 name="region">region</axis1>
          <axis2 name="Year">demand-physical[@vintage]</axis2>
          <xPath
              buildList="true"
              dataName="input"
              group="false"
              sumAll="false">
              *[@type='sector' (:collapse:) and not(contains(@name, 'water_td_irr')) ]//
              *[@type='input' (:collapse:) and contains(@name, 'water_td_irr') and ends-with(@name, '_W')]/
                 demand-physical/node()
          </xPath>
          <comments/>
      </supplyDemandQuery>
    </aQuery>
    <aQuery>
        <query title = "land allocation by crop">
            <axis1 name = "LandLeaf">LandLeaf[@crop]</axis1>
            <axis2 name = "Year">land-allocation[@year]</axis2>
            <xPath
                buildList = "true"
                dataName = "LandLeaf"
                group = "false"
                sumAll = "false">/LandNode[@name='root' or @type='LandNode' (:collapse:)]//land-allocation/text()</xPath>
            <comments/>
        </query>
    </aQuery>
    <aQuery>
        <marketQuery title="supply of all markets">
            <axis1 name="market">market</axis1>
            <axis2 name="Year">market</axis2>
            <xPath buildList="true" dataName="price" group="false" sumAll="false">Marketplace/market[true()]/supply/node()</xPath>
            <comments/>
        </marketQuery>
    </aQuery>
    <aQuery>
      <marketQuery title="demand of all markets">
            <axis1 name="market">market</axis1>
            <axis2 name="Year">market</axis2>
            <xPath buildList="true" dataName="price" group="false" sumAll="false">Marketplace/market[true()]/demand/node()</xPath>
            <comments/>
      </marketQuery>
    </aQuery>
    <aQuery>
      <supplyDemandQuery title="outputs by tech">
            <axis1 name="technology">technology[@name]</axis1>
            <axis2 name="Year">physical-output[@vintage]</axis2>
            <xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type='sector']/*[@type='subsector']/*[@type='technology']/*[@type='output']/physical-output/node()</xPath>
            <comments/>
      </supplyDemandQuery>
    </aQuery>
    <aQuery>
      <supplyDemandQuery title="inputs by tech">
            <axis1 name="input">input</axis1>
            <axis2 name="Year">demand-physical[@vintage]</axis2>
            <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector']/*[@type='subsector']/*[@type='technology']/*[@type='input']/demand-physical/node()</xPath>
            <comments/>
      </supplyDemandQuery>
    </aQuery>
    <aQuery>
      <supplyDemandQuery title="demand balances by crop commodity">
            <axis1 name="sector">sector</axis1>
            <axis2 name="Year">demand-physical[@vintage]</axis2>
            <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector']//*[@type='input' and
                    (@name='regional corn' or @name='regional fibercrop' or @name='regional fruits' or @name='regional legumes'
                      or @name='regional misccrop' or @name='regional nuts_seeds' or @name='regional oilcrop' or @name='regional othergrain'
                      or @name='regional palmfruit' or @name='regional rice' or @name='regional root_tuber'
                      or @name='regional soybean' or @name='regional sugarcrop' or @name='regional vegetables' or @name='regional wheat'
                      or @name='FodderGrass' or @name='FodderHerb' or @name='Forest' or @name='Pasture')]/
                      demand-physical/node()</xPath>
            <comments/>
      </supplyDemandQuery>
    </aQuery>
</queries>
